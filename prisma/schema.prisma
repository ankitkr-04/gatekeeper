datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Museum {
  id            String    @id @default(uuid())
  name          String
  address       String
  city          String
  state         String
  country       String
  zipCode       String
  description   String?
  adultCost     Float      // Cost for adults
  childCost     Float      // Cost for children
  seniorCost    Float      // Cost for seniors
  accessoryCost Float      // Cost for accessories (if any)
  bookings      Booking[]

  Holiday Holiday[]
}

model Booking {
  id             String        @id @default(uuid())
  museum         Museum        @relation(fields: [museumId], references: [id])
  museumId       String
  numOfAdults    Int
  visitDate      DateTime
  conversationId String?        @unique
  numOfChildren  Int
  numOfSeniors   Int
  accessories    Int           // Number of accessories
  totalPrice     Float
  status         PaymentStatus
  orderId        String        @unique
  paymentChannel String
  transactionId  String?
  ticket         Ticket?
  bookedBy       String        // Person's name
  email          String        // Person's email
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Ticket {
  id        String       @id @default(uuid())
  booking   Booking      @relation(fields: [bookingId], references: [id])
  bookingId String       @unique
  barcodeNo String       @unique
  status    TicketStatus
  visitDate DateTime
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}

enum TicketStatus {
  BOOKED
  USED
  CANCELLED
}

model Holiday {
  id        String   @id @default(uuid())
  museum    Museum?   @relation(fields: [museumId], references: [id])
  museumId  String?
  description String
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
